using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Students.BLL.Initializer
{
    public class GenerateTestData
    {
        public string[] famile = { "Иванов", "Кузнецов", "Соколов", "Попов", "Лебедев", "Козлов", "Новиков", "Морозов", "Петров", "Волков", "Соловьёв", "Васильев", "Зайцев", "Павлов", "Семёнов", "Голубев", "Виноградов", "Богданов", "Воробьёв", "Фёдоров", "Михайлов", "Беляев", "Тарасов", "Белов", "Комаров", "Орлов", "Киселёв", "Макаров", "Андреев", "Ковалёв", "Ильин", "Гусев", "Титов", "Кузьмин", "Кудрявцев", "Баранов", "Куликов", "Алексеев", "Степанов", "Яковлев", "Сорокин", "Сергеев", "Романов", "Захаров", "Борисов", "Королёв", "Герасимов", "Пономарёв", "Григорьев", "Лазарев", "Медведев", "Ершов", "Никитин", "Соболев", "Рябов", "Поляков", "Цветков", "Данилов", "Жуков", "Фролов", "Журавлёв", "Николаев", "Крылов", "Максимов", "Сидоров", "Осипов", "Белоусов", "Федотов", "Дорофеев", "Егоров", "Матвеев", "Бобров", "Дмитриев", "Калинин", "Анисимов", "Петухов", "Антонов", "Тимофеев", "Никифоров", "Веселов", "Филиппов", "Марков", "Большаков", "Суханов", "Миронов", "Ширяев", "Александров", "Коновалов", "Шестаков", "Казаков", "Ефимов", "Денисов", "Громов", "Фомин", "Давыдов", "Мельников", "Щербаков", "Блинов", "Колесников", "Карпов", "Афанасьев", "Власов", "Маслов", "Исаков", "Тихонов", "Аксёнов", "Гаврилов", "Родионов", "Котов", "Горбунов", "Кудряшов", "Быков", "Зуев", "Третьяков", "Савельев", "Панов", "Рыбаков", "Суворов", "Абрамов", "Воронов", "Мухин", "Архипов", "Трофимов", "Мартынов", "Емельянов", "Горшков", "Чернов", "Овчинников", "Селезнёв", "Панфилов", "Копылов", "Михеев", "Галкин", "Назаров", "Лобанов", "Лукин", "Беляков", "Потапов", "Некрасов", "Хохлов", "Жданов", "Наумов", "Шилов", "Воронцов", "Ермаков", "Дроздов", "Игнатьев", "Савин", "Логинов", "Сафонов", "Капустин", "Кириллов", "Моисеев", "Елисеев", "Кошелев", "Костин", "Горбачёв", "Орехов", "Ефремов", "Исаев", "Евдокимов", "Калашников", "Кабанов", "Носков", "Юдин", "Кулагин", "Лапин", "Прохоров", "Нестеров", "Харитонов", "Агафонов", "Муравьёв", "Ларионов", "Федосеев", "Зимин", "Пахомов", "Шубин", "Игнатов", "Филатов", "Крюков", "Рогов", "Кулаков", "Терентьев", "Молчанов", "Владимиров", "Артемьев", "Гурьев", "Зиновьев", "Гришин", "Кононов", "Дементьев", "Ситников", "Симонов", "Мишин", "Фадеев", "Комиссаров", "Мамонтов", "Носов", "Гуляев", "Шаров", "Устинов", "Вишняков", "Евсеев", "Лаврентьев", "Брагин", "Константинов", "Корнилов", "Авдеев", "Зыков", "Бирюков", "Шарапов", "Никонов", "Щукин", "Дьячков", "Одинцов", "Сазонов", "Якушев", "Красильников", "Гордеев", "Самойлов", "Князев", "Беспалов", "Уваров", "Шашков", "Бобылёв", "Доронин", "Белозёров", "Рожков", "Самсонов", "Мясников", "Лихачёв", "Буров", "Сысоев", "Фомичёв", "Русаков", "Стрелков", "Гущин", "Тетерин", "Колобов", "Субботин", "Фокин", "Блохин", "Селиверстов", "Пестов", "Кондратьев", "Силин", "Меркушев", "Лыткин", "Туров", };
        public string[] Name = { "Август", "Августин", "Авраам", "Аврора", "Агата", "Агафон", "Агнесса", "Агния", "Ада", "Аделаида", "Аделина", "Адонис", "Акайо", "Акулина", "Алан", "Алевтина", "Александр", "Александра", "Алексей", "Алена", "Алина", "Алиса", "Алла", "Алсу", "Альберт", "Альбина", "Альфия", "Альфред", "Амалия", "Амелия", "Анастасий", "Анастасия", "Анатолий", "Ангелина", "Андрей", "Анжела", "Анжелика", "Анисий", "Анна", "Антон", "Антонина", "Анфиса", "Аполлинарий", "Аполлон", "Ариадна", "Арина", "Аристарх", "Аркадий", "Арсен", "Арсений", "Артем", "Артемий", "Артур", "Архип", "Ася", "Беатрис", "Белла", "Бенедикт", "Берта", "Богдан", "Божена", "Болеслав", "Борис", "Борислав", "Бронислав", "Бронислава", "Булат", "Вадим", "Валентин", "Валентина", "Валерий", "Валерия", "Ванда", "Варвара", "Василий", "Василиса", "Венера", "Вениамин", "Вера", "Вероника", "Викентий", "Виктор", "Виктория", "Вилен", "Виолетта", "Виссарион", "Вита", "Виталий", "Влад", "Владимир", "Владислав", "Владислава", "Владлен", "Вольдемар", "Всеволод", "Вячеслав", "Габриэлла", "Гавриил", "Галина", "Гарри", "Гелла", "Геннадий", "Генриетта", "Георгий", "Герман", "Гертруда", "Глафира", "Глеб", "Глория", "Гордей", "Грейс", "Грета", "Григорий", "Гульмира", "Давид", "Дана", "Даниил", "Даниэла", "Дарина", "Дарья", "Даяна", "Демьян", "Денис", "Джеймс", "Джек", "Джессика", "Джозеф", "Диана", "Дина", "Динара", "Дмитрий", "Добрыня", "Доминика", "Дора", "Ева", "Евгений", "Евгения", "Евдоким", "Евдокия", "Егор", "Екатерина", "Елена", "Елизавета", "Елисей", "Есения", "Ефим", "Ефрем", "Ефросинья", "Захар", "Зинаида", "Зиновий", "Злата", "Зорий", "Зоряна", "Зоя", "Иван", "Иветта", "Игнатий", "Игорь", "Изабелла", "Изольда", "Илга", "Илларион", "Илона", "Илья", "Инга", "Инесса", "Инна", "Иннокентий", "Иосиф", "Ираида", "Ираклий", "Ирина", "Итан", "Ия", "Казимир", "Калерия", "Камилла", "Камиль", "Капитолина", "Карина", "Каролина", "Касьян", "Ким", "Кир", "Кира", "Кирилл", "Клавдия", "Клара", "Клариса", "Клим", "Климент", "Кондрат", "Константин", "Кристина", "Ксения", "Кузьма", "Лада", "Лариса", "Лев", "Леон", "Леонид", "Леонтий", "Леся", "Лидия", "Лика", "Лилиана", "Лилия", "Лина", "Лолита", "Луиза", "Лукьян", "Любовь", "Людмила", "Магдалина", "Майя", "Макар", "Максим", "Марат", "Маргарита", "Марианна", "Марина", "Мария", "Марк", "Марта", "Мартин", "Марфа", "Матвей", "Мелания", "Мелисса", "Милана", "Милена", "Мирон", "Мирослава", "Мирра", "Митрофан", "Михаил", "Мия", "Модест", "Моисей", "Мухаммед", "Сабина", "Савва", "Савелий", "Саки", "Сакура", "Самсон", "Самуил", "Сарра", "Светлана", "Святослав", "Севастьян", "Семен", "Серафима", "Сергей", "Сильвия", "Снежана", "Сора", "София", "Софья", "Станислав", "Стелла", "Степан", "Стефания", "Рада", "Радмила", "Раиса", "Райан", "Раймонд", "Раяна", "Регина", "Ренат", "Рената", "Рику", "Римма", "Ринат", "Рита", "Роберт", "Родион", "Роза", "Роксана", "Роман", "Россияна", "Ростислав", "Руслан", "Рустам", "Рэн", "Юи", "Юлиан", "Юлиана", "Юлий", "Юлия", "Юма", "Юна", "Юрий" };
        public static List<string> PhoneListGenerate(int count)
        {
            List<string> Phone = new();
            string[] Code =
            {
            "+375291",
            "+375292",
            "+375250",
            "+375251",
            "+375252",
            "+375253",
            "+375254",
            "+375255",
            "+375256",
            "+375257",
            "+375258",
            "+375259",
            "+375293",
            "+375295",
            "+375296",
            "+375299",
            };
            Random rnd = new();
            for (int i = 0; i < count; i++)
            {
                string randCode = Code[rnd.Next(0, Code.Length - 0)];
                Phone.Add(randCode + rnd.Next(0, 9) + rnd.Next(0, 9) + rnd.Next(0, 9) + rnd.Next(0, 9) + rnd.Next(0, 9) + rnd.Next(0, 9));
            }
            return Phone;
        }
        public static List<string> EmailListGenerate(int count)
        {
            List<string> Email = new();
            string[] ad =
   {
            "@gmail.com", "@mail.ru", "@yandex.ru"

        };
            Random rnd = new();
            string[] a_s =
            {
            "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k",
            "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "A", "B", "C", "D", "E", "F",
            "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "."
        };
            for (int i = 0; i < count; i++)
            {
                string randsror = ad[rnd.Next(0, ad.Length - 0)];
                string r = a_s[rnd.Next(0, a_s.Length)];
                string ra = a_s[rnd.Next(0, a_s.Length)];
                string rs = a_s[rnd.Next(0, a_s.Length)];
                string rd = a_s[rnd.Next(0, a_s.Length)];
                string rf = a_s[rnd.Next(0, a_s.Length)];
                string rg = a_s[rnd.Next(0, a_s.Length)];
                string rh = a_s[rnd.Next(0, a_s.Length)];
                string rj = a_s[rnd.Next(0, a_s.Length)];
                string rk = a_s[rnd.Next(0, a_s.Length)];
                Email.Add(r + ra + rs + rd + rf + rg + rh + rj + rk + randsror);
            }
            return Email;
        }
        public static List<DateTime> DateListGenerate(int size, DateTime date)
        {
            List<DateTime> dates = new();
            dates.Add(date);
            Console.WriteLine(dates.Last().ToString());

            for (int i = 1; i < size; i++)
            {
                dates.Add(dates.Last().AddDays(4 * (1 + i)));
            }
            return dates;
        }
        public static DateTime DateGenerate()
        {
            Random rnd = new();
            DateTime start;
            do
            {
                start = new DateTime(1970, 1, 1);
                int range = (DateTime.Today - start).Days;
                start = start.AddDays(rnd.Next(range));
            }
            while (start > new DateTime(2003, 1, 1));
            return start;
        }
    }
}

